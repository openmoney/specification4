openapi: 3.0.0
info:
  version: 2.0.0
  title: Openmoney API
  description: Openmoney API
  termsOfService: http://openmoney.cc/index.php?page=terms
  contact:
    name: Openmoney Development Team
    url: http://openmoney.cc
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
paths:
  /stewards:
    get:
      x-swagger-router-controller: Stewards
      operationId: stewardsList
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9/+=.]+$
      summary: Get a listing of known stewards
      tags:
        - stewards
      security:
        - oauth2PasswordSecurity:
            - read:stewards
        - oauth2ImplicitSecurity:
            - read:stewards
        - oauth2ApplicationSecurity:
            - read:stewards
        - oauth2AccessCodeSecurity:
            - read:stewards
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: List of stewards
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/stewards_list"
            text/html:
              schema:
                $ref: "#/components/schemas/stewards_list"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      x-swagger-router-controller: Stewards
      operationId: stewardsPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/register_request"
        description: Registration Request
        required: true
      summary: Register a steward on the system
      tags:
        - stewards
      responses:
        "200":
          description: Registration Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/register_response"
            text/html:
              schema:
                $ref: "#/components/schemas/register_response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  /stewards/forgot:
    post:
      x-swagger-router-controller: Stewards
      operationId: stewardsForgotPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/forgot_request"
        description: Forgot Password Request
        required: true
      summary: Forgot password or stewardname request
      tags:
        - stewards
      responses:
        "200":
          description: Forgot Password Sent Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/forgot_response"
            text/html:
              schema:
                $ref: "#/components/schemas/forgot_response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/reset":
    post:
      x-swagger-router-controller: Stewards
      operationId: stewardsResetPost
      parameters:
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reset_request"
        description: Reset Password Request
        required: true
      summary: Reset password request
      tags:
        - stewards
      responses:
        "200":
          description: Reset Password Sent Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reset_response"
            text/html:
              schema:
                $ref: "#/components/schemas/reset_response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/login":
    get:
      x-swagger-router-controller: Auth
      operationId: loginGet
      summary: Login Page for the steward
      parameters:
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      tags:
        - auth
      responses:
        "200":
          description: A login page for the steward
          content:
            text/plain:
              schema:
                type: string
    post:
      x-swagger-router-controller: Auth
      operationId: loginPost
      summary: Login steward
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Basic [A-Za-z0-9/+=.]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      tags:
        - auth
      responses:
        "302":
          description: Redirect to account page
          content:
            text/plain:
              schema:
                type: string
  "/stewards/{stewardname}/logout":
    get:
      x-swagger-router-controller: Auth
      operationId: logoutPost
      summary: Logout steward
      parameters:
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      tags:
        - auth
      responses:
        "302":
          description: Redirect to login page
          content:
            application/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
  "/stewards/{stewardname}/account":
    get:
      x-swagger-router-controller: Auth
      operationId: accountGet
      summary: Get Steward account information
      parameters:
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      tags:
        - auth
      responses:
        "200":
          description: An account page
          content:
            text/html:
              schema:
                type: string
  "/stewards/{stewardname}/oauth/application":
    post:
      x-swagger-router-controller: Auth
      operationId: oauthApplicationPost
      summary: Create an application for a client_id and client_secret for oauth token
        authorization.
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Basic [A-Za-z0-9/+=.]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_request"
        description: Application Object
        required: true
      description: Existing steward Registers an application with the openmoney network.
      tags:
        - auth
      security:
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: Application Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/application_response"
  "/stewards/{stewardname}/dialog/authorize":
    get:
      x-swagger-router-controller: Auth
      operationId: oauthDialogeGet
      summary: Implicit authorization dialog presented to steward to authorize
        client_id to access API resources on their behalf.
      parameters:
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: client_id
          in: query
          description: Client ID received during registration
          required: true
          schema:
            type: string
            minLength: 5
            maxLength: 800
            pattern: ^[A-Za-z0-9\\\s/=+-]+$
        - name: redirect_uri
          in: query
          description: A uri to redirect steward after authorization
          schema:
            type: string
            format: url
            maxLength: 512
        - name: scopes
          in: query
          description: A comma separated list of scopes. If not provided, scope defaults to
            an empty list of scopes for stewards that don’t have a valid token
            for the app. For stewards who do already have a valid token for the
            app, the steward won’t be shown the OAuth authorization page with
            the list of scopes. Instead, this step of the flow will
            automatically complete with the same scopes that were used last time
            the steward completed the flow.
          schema:
            type: array
            items:
              type: string
              minLength: 5
              maxLength: 32
      tags:
        - auth
      responses:
        "302":
          description: redirect to client redirect uri
        default:
          description: Error
          content:
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/dialog/authorize/decision":
    post:
      x-swagger-router-controller: Auth
      operationId: oauthDialogePost
      description: Authorization dialoge decision with allowed scopes.
      parameters:
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/oauth_authorize_request"
        required: true
      summary: Authorizes a steward on the openmoney network
      tags:
        - auth
      responses:
        "302":
          description: redirect to client redirect uri
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/oauth/token":
    post:
      x-swagger-router-controller: Auth
      operationId: oauthAccessTokenPost
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Bearer|Basic [A-Za-z0-9/+=.]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/access_token_request"
        description: Access Token Request Object
        required: true
      tags:
        - auth
      summary: Exchanges the user or client credentials for an access token used to
        access resources.
      security:
        - basicAuthenticationSecurity: []
        - oauth2Refresh: []
      responses:
        "200":
          description: Access Token is returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token_response"
            text/html:
              schema:
                $ref: "#/components/schemas/token_response"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}":
    get:
      x-swagger-router-controller: Stewards
      operationId: stewardsGet
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Get a single steward
      tags:
        - stewards
      security:
        - oauth2PasswordSecurity:
            - read:stewards
        - oauth2ImplicitSecurity:
            - read:stewards
        - oauth2ApplicationSecurity:
            - read:stewards
        - oauth2AccessCodeSecurity:
            - read:stewards
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: steward
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/stewards_get"
            text/html:
              schema:
                $ref: "#/components/schemas/stewards_get"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      x-swagger-router-controller: Stewards
      operationId: stewardsPut
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/stewards_request"
        description: Steward Document
        required: true
      summary: Update a steward account
      tags:
        - stewards
      security:
        - oauth2PasswordSecurity:
            - write:stewards
        - oauth2ImplicitSecurity:
            - write:stewards
        - oauth2ApplicationSecurity:
            - write:stewards
        - oauth2AccessCodeSecurity:
            - write:stewards
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: steward
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      x-swagger-router-controller: Stewards
      operationId: stewardsDelete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            maxLength: 1024
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Delete a steward account
      tags:
        - stewards
      security:
        - oauth2PasswordSecurity:
            - write:stewards
        - oauth2ImplicitSecurity:
            - write:stewards
        - oauth2ApplicationSecurity:
            - write:stewards
        - oauth2AccessCodeSecurity:
            - write:stewards
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: steward
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete_response"
            text/html:
              schema:
                $ref: "#/components/schemas/delete_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/namespaces":
    get:
      x-swagger-router-controller: Spaces
      operationId: spacesList
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: parent_namespace
          in: query
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Get a Listing of namespaces known by steward.
      tags:
        - namespaces
      security:
        - oauth2PasswordSecurity:
            - read:namespaces
        - oauth2ImplicitSecurity:
            - read:namespaces
        - oauth2ApplicationSecurity:
            - read:namespaces
        - oauth2AccessCodeSecurity:
            - read:namespaces
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: List of spaces
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/namespaces_list"
            text/html:
              schema:
                $ref: "#/components/schemas/namespaces_list"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      x-swagger-router-controller: Spaces
      operationId: spacesPost
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/namespaces_request"
        required: true
      summary: Create a namespace
      tags:
        - namespaces
      security:
        - oauth2PasswordSecurity:
            - write:namespaces
        - oauth2ImplicitSecurity:
            - write:namespaces
        - oauth2ApplicationSecurity:
            - write:namespaces
        - oauth2AccessCodeSecurity:
            - write:namespaces
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/namespaces/{namespace}":
    get:
      x-swagger-router-controller: Spaces
      operationId: spacesGet
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          description: space name
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Get a namespace by it's name
      tags:
        - namespaces
      security:
        - oauth2PasswordSecurity:
            - read:namespaces
        - oauth2ImplicitSecurity:
            - read:namespaces
        - oauth2ApplicationSecurity:
            - read:namespaces
        - oauth2AccessCodeSecurity:
            - read:namespaces
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/namespaces_get"
            text/html:
              schema:
                $ref: "#/components/schemas/namespaces_get"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      x-swagger-router-controller: Spaces
      operationId: spacesPut
      summary: Update a namespace
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          description: space name
          schema:
            type: string
            maxLength: 512
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/namespaces_request"
      tags:
        - namespaces
      security:
        - oauth2PasswordSecurity:
            - write:namespaces
        - oauth2ImplicitSecurity:
            - write:namespaces
        - oauth2ApplicationSecurity:
            - write:namespaces
        - oauth2AccessCodeSecurity:
            - write:namespaces
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      x-swagger-router-controller: Spaces
      operationId: spacesDelete
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          description: namespace name
          schema:
            type: string
            maxLength: 1048
            pattern: ^[A-Za-z0-9_.-]+$
      description: Delete a namespace
      tags:
        - namespaces
      security:
        - oauth2PasswordSecurity:
            - write:namespaces
        - oauth2ImplicitSecurity:
            - write:namespaces
        - oauth2ApplicationSecurity:
            - write:namespaces
        - oauth2AccessCodeSecurity:
            - write:namespaces
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: Delete success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete_response"
            text/html:
              schema:
                $ref: "#/components/schemas/delete_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/currencies":
    get:
      x-swagger-router-controller: Currencies
      operationId: currenciesList
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Get a Listing currencies known by steward.
      tags:
        - currencies
      security:
        - oauth2PasswordSecurity:
            - read:currencies
        - oauth2ImplicitSecurity:
            - read:currencies
        - oauth2ApplicationSecurity:
            - read:currencies
        - oauth2AccessCodeSecurity:
            - read:currencies
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: List of currencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currencies_list"
            text/html:
              schema:
                $ref: "#/components/schemas/currencies_list"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    post:
      x-swagger-router-controller: Currencies
      operationId: currenciesPost
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        $ref: "#/components/requestBodies/currencies_request"
      summary: Create a currency
      tags:
        - currencies
      security:
        - oauth2PasswordSecurity:
            - write:currencies
        - oauth2ImplicitSecurity:
            - write:currencies
        - oauth2ApplicationSecurity:
            - write:currencies
        - oauth2AccessCodeSecurity:
            - write:currencies
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/currencies/{currency}":
    get:
      x-swagger-router-controller: Currencies
      operationId: currenciesGet
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: currency
          in: path
          required: true
          description: Name of a currency
          schema:
            type: string
            maxLength: 512
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Get a currency by its name
      tags:
        - currencies
      security:
        - oauth2PasswordSecurity:
            - read:currencies
        - oauth2ImplicitSecurity:
            - read:currencies
        - oauth2ApplicationSecurity:
            - read:currencies
        - oauth2AccessCodeSecurity:
            - read:currencies
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currencies_get"
            text/html:
              schema:
                $ref: "#/components/schemas/currencies_get"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      x-swagger-router-controller: Currencies
      operationId: currenciesPut
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: currency
          in: path
          required: true
          description: Name of a currency
          schema:
            type: string
            maxLength: 512
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        $ref: "#/components/requestBodies/currencies_request"
      summary: Update a Currency
      tags:
        - currencies
      security:
        - oauth2PasswordSecurity:
            - write:currencies
        - oauth2ImplicitSecurity:
            - write:currencies
        - oauth2ApplicationSecurity:
            - write:currencies
        - oauth2AccessCodeSecurity:
            - write:currencies
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      x-swagger-router-controller: Currencies
      operationId: currenciesDelete
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: currency
          in: path
          required: true
          description: Currency name
          schema:
            type: string
            maxLength: 512
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Delete a currency
      tags:
        - currencies
      security:
        - oauth2PasswordSecurity:
            - write:currencies
        - oauth2ImplicitSecurity:
            - write:currencies
        - oauth2ApplicationSecurity:
            - write:currencies
        - oauth2AccessCodeSecurity:
            - write:currencies
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete_response"
            text/html:
              schema:
                $ref: "#/components/schemas/delete_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/accounts":
    get:
      x-swagger-router-controller: Accounts
      operationId: accountsList
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: currency
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_-]+$
        - name: currency_namespace
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]*$
      summary: Get a Listing of accounts in a namespace
      tags:
        - accounts
      security:
        - oauth2PasswordSecurity:
            - read:accounts
        - oauth2ImplicitSecurity:
            - read:accounts
        - oauth2ApplicationSecurity:
            - read:accounts
        - oauth2AccessCodeSecurity:
            - read:accounts
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: List of accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts_list"
            text/html:
              schema:
                $ref: "#/components/schemas/accounts_list"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/namespaces/{namespace}/accounts":
    post:
      x-swagger-router-controller: Accounts
      operationId: accountsPost
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        $ref: "#/components/requestBodies/accounts_request"
      summary: create an account in a namespace
      tags:
        - accounts
      security:
        - oauth2PasswordSecurity:
            - write:accounts
        - oauth2ImplicitSecurity:
            - write:accounts
        - oauth2ApplicationSecurity:
            - write:accounts
        - oauth2AccessCodeSecurity:
            - write:accounts
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete_response"
            text/html:
              schema:
                $ref: "#/components/schemas/delete_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/namespaces/{namespace}/accounts/{account}":
    get:
      x-swagger-router-controller: Accounts
      operationId: accountsGet
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: account
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_-]+$
        - name: currency
          in: query
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_-]+$
        - name: currency_namespace
          in: query
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]*$
      summary: Get an account by account name
      tags:
        - accounts
      security:
        - oauth2PasswordSecurity:
            - read:accounts
        - oauth2ImplicitSecurity:
            - read:accounts
        - oauth2ApplicationSecurity:
            - read:accounts
        - oauth2AccessCodeSecurity:
            - read:accounts
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts_get"
            text/html:
              schema:
                $ref: "#/components/schemas/accounts_get"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    put:
      x-swagger-router-controller: Accounts
      operationId: accountsPut
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: account
          in: path
          required: true
          description: Account Name
          schema:
            type: string
            maxLength: 1024
            pattern: ^[A-Za-z0-9_.-]+$
      requestBody:
        $ref: "#/components/requestBodies/accounts_request"
      summary: Update an account
      tags:
        - accounts
      security:
        - oauth2PasswordSecurity:
            - write:accounts
        - oauth2ImplicitSecurity:
            - write:accounts
        - oauth2ApplicationSecurity:
            - write:accounts
        - oauth2AccessCodeSecurity:
            - write:accounts
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
    delete:
      x-swagger-router-controller: Accounts
      operationId: accountsDelete
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: account
          in: path
          required: true
          schema:
            type: string
            maxLength: 1024
            pattern: ^[A-Za-z0-9_.-]+$
      summary: Delete an account
      tags:
        - accounts
      security:
        - oauth2PasswordSecurity:
            - write:accounts
        - oauth2ImplicitSecurity:
            - write:accounts
        - oauth2ApplicationSecurity:
            - write:accounts
        - oauth2AccessCodeSecurity:
            - write:accounts
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delete_response"
            text/html:
              schema:
                $ref: "#/components/schemas/delete_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/accounts/lookup":
    get:
      x-swagger-router-controller: Accounts
      operationId: accountsDiscovery
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: publicKey
          in: query
          description: Accounts public Key
          schema:
            type: string
            minLength: 1
            maxLength: 800
            pattern: ^[A-Za-z0-9\\\s/=+-]+$
      summary: Lookup an account by it's public key
      tags:
        - accounts
      security:
        - oauth2PasswordSecurity:
            - read:stewards
            - read:accounts
        - oauth2ImplicitSecurity:
            - read:stewards
            - read:accounts
        - oauth2ApplicationSecurity:
            - read:stewards
            - read:accounts
        - oauth2AccessCodeSecurity:
            - read:stewards
            - read:accounts
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: Lookup Results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts_response"
            text/html:
              schema:
                $ref: "#/components/schemas/accounts_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/journals":
    get:
      x-swagger-router-controller: Journals
      operationId: journalsList
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: query
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: account
          in: query
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_-]+$
        - name: currency
          in: query
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_-]+$
        - name: currency_namespace
          in: query
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]*$
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
        - name: range
          in: query
          schema:
            type: integer
            minimum: 5
      summary: List Journal Entries for this accountname
      tags:
        - journals
      security:
        - oauth2PasswordSecurity:
            - read:journals
        - oauth2ImplicitSecurity:
            - read:journals
        - oauth2ApplicationSecurity:
            - read:journals
        - oauth2AccessCodeSecurity:
            - read:journals
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journals_list"
            text/html:
              schema:
                $ref: "#/components/schemas/journals_list"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
  "/stewards/{stewardname}/namespaces/{namespace}/accounts/{account}/journals/{currency}":
    post:
      x-swagger-router-controller: Journals
      operationId: journalsPost
      parameters:
        - name: Authorization
          description: Authorization Token
          in: header
          schema:
            type: string
            pattern: ^Bearer [A-Za-z0-9=/+]+$
        - name: stewardname
          in: path
          required: true
          schema:
            type: string
            pattern: ^[A-Za-z0-9_.-]+$
        - name: namespace
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: account
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]+$
        - name: currency
          in: path
          required: true
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_-]+$
        - name: currency_namespace
          in: query
          schema:
            type: string
            maxLength: 255
            pattern: ^[A-Za-z0-9_.-]*$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/journals_request"
      summary: Create a journal entry for this account
      tags:
        - journals
      security:
        - oauth2PasswordSecurity:
            - write:journals
        - oauth2ImplicitSecurity:
            - write:journals
        - oauth2ApplicationSecurity:
            - write:journals
        - oauth2AccessCodeSecurity:
            - write:journals
        - apiKeySecurity: []
        - basicAuthenticationSecurity: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/create_response"
            text/html:
              schema:
                $ref: "#/components/schemas/create_response"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
            text/html:
              schema:
                $ref: "#/components/schemas/ErrorModel"
servers:
  - url: https://cloud.openmoney.cc/V2
components:
  requestBodies:
    currencies_request:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/currencies_request"
    accounts_request:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accounts_request"
  securitySchemes:
    oauth2PasswordSecurity:
      type: oauth2
      x-token-operation-id: oauthAccessTokenPost
      flows:
        password:
          tokenUrl: https://cloud.openmoney.cc/V2/stewards/%7Bstewardname%7D/oauth/token
          scopes:
            read:stewards: Read access to stewards
            write:stewards: Write access to stewards
            read:accounts: Read access to accounts
            write:accounts: Write access to accounts
            read:currencies: Read access to currencies
            write:currencies: Write access to currencies
            manage:currencies: Manage currencies
            read:namespaces: Read access to namespaces
            write:namespaces: Write access to namespaces
            manage:namespaces: Manage namespaces
            read:journals: Read access to journals
            write:journals: Write access  to journals
    oauth2ImplicitSecurity:
      type: oauth2
      x-token-operation-id: oauthAccessTokenPost
      flows:
        implicit:
          authorizationUrl: http://cloud.openmoney.cc/V2/stewards/%7Bstewardname%7D/dialog/authorize
          scopes:
            read:stewards: Read access to stewards
            write:stewards: Write access to stewards
            read:accounts: Read access to accounts
            write:accounts: Write access to accounts
            read:currencies: Read access to currencies
            write:currencies: Write access to currencies
            manage:currencies: Manage currencies
            read:namespaces: Read access to namespaces
            write:namespaces: Write access to namespaces
            manage:namespaces: Manage namespaces
            read:journals: Read access to journals
            write:journals: Write access  to journals
    oauth2ApplicationSecurity:
      type: oauth2
      x-token-operation-id: oauthAccessTokenPost
      flows:
        clientCredentials:
          tokenUrl: https://cloud.openmoney.cc/V2/stewards/%7Bstewardname%7D/oauth/token
          scopes:
            read:stewards: Read access to stewards
            write:stewards: Write access to stewards
            read:accounts: Read access to accounts
            write:accounts: Write access to accounts
            read:currencies: Read access to currencies
            write:currencies: Write access to currencies
            manage:currencies: Manage currencies
            read:namespaces: Read access to namespaces
            write:namespaces: Write access to namespaces
            manage:namespaces: Manage namespaces
            read:journals: Read access to journals
            write:journals: Write access  to journals
    oauth2AccessCodeSecurity:
      type: oauth2
      x-authroization-operation-id: oauthDialogeGet
      x-token-operation-id: oauthAccessTokenPost
      flows:
        authorizationCode:
          authorizationUrl: https://cloud.openmoney.cc/V2/stewards/%7Bstewardname%7D/oauth/token
          tokenUrl: https://cloud.openmoney.cc/V2/stewards/%7Bstewardname%7D/oauth/token
          scopes:
            read:stewards: Read access to stewards
            write:stewards: Write access to stewards
            read:accounts: Read access to accounts
            write:accounts: Write access to accounts
            read:currencies: Read access to currencies
            write:currencies: Write access to currencies
            manage:currencies: Manage currencies
            read:namespaces: Read access to namespaces
            write:namespaces: Write access to namespaces
            manage:namespaces: Manage namespaces
            read:journals: Read access to journals
            write:journals: Write access  to journals
    apiKeySecurity:
      type: apiKey
      in: header
      name: Authorization
    oauth2Refresh:
      type: apiKey
      in: header
      name: Authorization
    basicAuthenticationSecurity:
      type: http
      scheme: basic
  schemas:
    stewards_list:
      type: array
      items:
        $ref: "#/components/schemas/stewards_get"
    namespaces_list:
      type: array
      items:
        $ref: "#/components/schemas/namespaces_get"
    currencies_list:
      type: array
      items:
        $ref: "#/components/schemas/currencies_get"
    accounts_list:
      type: array
      items:
        $ref: "#/components/schemas/accounts_get"
    journals_list:
      type: array
      items:
        $ref: "#/components/schemas/encrypted_journals"
    namespaces_get:
      allOf:
        - $ref: "#/components/schemas/get_response"
        - $ref: "#/components/schemas/namespaces_response"
    currencies_get:
      allOf:
        - $ref: "#/components/schemas/get_response"
        - $ref: "#/components/schemas/currencies_response"
    accounts_get:
      allOf:
        - $ref: "#/components/schemas/get_response"
        - $ref: "#/components/schemas/accounts_response"
    stewards_get:
      allOf:
        - $ref: "#/components/schemas/get_response"
        - $ref: "#/components/schemas/stewards_response"
    delete_response:
      type: object
      required:
        - id
        - ok
      properties:
        id:
          type: string
        ok:
          type: boolean
    get_response:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          pattern: ^[A-Za-z0-9_.~-]+$
    create_response:
      type: object
      required:
        - id
        - ok
      properties:
        id:
          type: string
        ok:
          type: boolean
    modification:
      type: object
      properties:
        modified:
          type: integer
          description: timestamp in milliseconds since epoch
        modified_by:
          type: string
          description: stewardname of steward who made modification
        modification:
          type: string
          description: human readable description of modification
    stewards_request:
      type: object
      minProperties: 2
      maxProperties: 10
      required:
        - stewardname
      properties:
        stewardname:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        password:
          type: string
          minLength: 4
          maxLength: 1024
        publicKey:
          type: string
          minLength: 266
          maxLength: 800
          pattern: ^-----BEGIN PUBLIC KEY-----[A-Za-z0-9\\\s/=+]+-----END PUBLIC
            KEY-----$
        email:
          type: string
          format: email
          maxLength: 255
          pattern: ^([\w-]+(?:[\.\+][\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$
        email_notifications:
          type: boolean
    stewards_response:
      type: object
      minProperties: 2
      required:
        - stewardname
      properties:
        stewardname:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        publicKey:
          type: string
          minLength: 266
          maxLength: 800
          pattern: ^-----BEGIN PUBLIC KEY-----[A-Za-z0-9\\\s/=+]+-----END PUBLIC
            KEY-----$
        email:
          type: string
          format: email
          maxLength: 255
          pattern: ^([\w-]+(?:[\.\+][\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$
        email_notifications:
          type: boolean
        created:
          type: integer
          description: timestamp in milliseconds since epoch
        created_by:
          type: string
          description: stewardname of steward who made change
        modifications:
          type: array
          items:
            $ref: "#/components/schemas/modification"
    forgot_request:
      type: object
      properties:
        stewardname:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        email:
          type: string
          format: email
          maxLength: 255
          pattern: ^([\w-]+(?:[\.\+][\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$
    forgot_response:
      type: object
      properties:
        ok:
          type: boolean
    reset_request:
      type: object
      properties:
        forgot_token:
          type: string
        password:
          type: string
          minLength: 4
          maxLength: 1024
    reset_response:
      type: object
      properties:
        ok:
          type: boolean
    accounts_request:
      type: object
      minProperties: 5
      required:
        - account
        - account_namespace
        - currency
        - currency_namespace
        - stewards
      properties:
        account:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        account_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        currency:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        currency_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        stewards:
          type: array
          items:
            type: string
            maxLength: 512
            pattern: ^stewards~[A-Za-z0-9_.-]+$
        publicKey:
          type: string
          minLength: 266
          maxLength: 800
          pattern: ^[A-Za-z0-9\\\s/=+-]+$
    accounts_response:
      type: object
      minProperties: 5
      required:
        - account
        - account_namespace
        - currency
        - currency_namespace
        - stewards
      properties:
        account:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        account_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        currency:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        currency_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        created:
          type: integer
          description: timestamp in milliseconds since epoch
        created_by:
          type: string
          description: stewardname of steward who made change
        modifications:
          type: array
          items:
            $ref: "#/components/schemas/modification"
        stewards:
          type: array
          items:
            type: string
            maxLength: 512
            pattern: ^stewards~[A-Za-z0-9_.-]+$
        publicKey:
          type: string
          minLength: 266
          maxLength: 800
          pattern: ^-----BEGIN PUBLIC KEY-----[A-Za-z0-9\\\s/=+]+-----END PUBLIC
            KEY-----$
    currencies_request:
      type: object
      minProperties: 3
      required:
        - currency
        - currency_namespace
        - stewards
      properties:
        currency:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        currency_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        stewards:
          type: array
          items:
            type: string
            maxLength: 512
            pattern: ^stewards~[A-Za-z0-9_.-]+$
    currencies_response:
      type: object
      minProperties: 3
      required:
        - currency
        - currency_namespace
        - stewards
      properties:
        currency:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        currency_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        created:
          type: integer
          description: timestamp in milliseconds since epoch
        created_by:
          type: string
          description: stewardname of steward who made change
        modifications:
          type: array
          items:
            $ref: "#/components/schemas/modification"
        stewards:
          type: array
          items:
            type: string
            maxLength: 512
            pattern: ^stewards~[A-Za-z0-9_.-]+$
    namespaces_request:
      type: object
      minProperties: 3
      required:
        - namespace
        - parent_namespace
        - stewards
      properties:
        namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        parent_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        stewards:
          type: array
          items:
            type: string
            maxLength: 512
            pattern: ^stewards~[A-Za-z0-9_.-]+$
    namespaces_response:
      type: object
      minProperties: 3
      required:
        - namespace
        - parent_namespace
        - stewards
      properties:
        namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        parent_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        created:
          type: integer
          description: timestamp in milliseconds since epoch
        created_by:
          type: string
          description: stewardname of who created space
        modifications:
          type: array
          items:
            $ref: "#/components/schemas/modification"
        stewards:
          type: array
          items:
            type: string
            maxLength: 512
            pattern: ^stewards~[A-Za-z0-9_.-]+$
    encrypted_journals:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        algorithm:
          type: string
        publicKeyEncryptedSymetricKey:
          type: string
        initializationVector:
          type: string
        encryptedJournal:
          $ref: "#/components/schemas/aes_encryption"
    aes_encryption:
      type: object
      properties:
        content:
          type: string
        tag:
          type: object
    journals_request:
      type: object
      minProperties: 3
      maxProperties: 9
      required:
        - to_account
        - to_account_namespace
        - amount
      properties:
        to_account:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        to_account_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        amount:
          type: number
          minimum: 0
        payload:
          type: object
    journals_response:
      type: object
      minProperties: 3
      maxProperties: 9
      required:
        - to_account
        - to_account_namespace
        - amount
      properties:
        to_account:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        to_account_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        from_account:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        from_account_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        currency:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_-]+$
        currency_namespace:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]*$
        amount:
          type: number
          minimum: 0
        created:
          type: integer
        created_by:
          type: string
          description: stewardname of who created entry
        payload:
          type: object
    application_request:
      type: object
      minProperties: 3
      maxProperties: 4
      required:
        - application_name
        - homepage_uri
        - authorization_callback_uri
      properties:
        application_name:
          type: string
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
          description: Applications Name
        homepage_uri:
          type: string
          maxLength: 512
          pattern: ^((https?:)(\/\/\/?)([\w]*(?::[\w]*)?@)?([\d\w\.-]+)(?::(\d+))?)?([\/\\\w\.()-]*)?(?:([?][^#]*)?(#.*)?)*
          description: Applications home page
        application_description:
          type: string
          maxLength: 1048
          description: Application Description
        authorization_callback_uri:
          type: string
          maxLength: 512
          pattern: ^((https?:)(\/\/\/?)([\w]*(?::[\w]*)?@)?([\d\w\.-]+)(?::(\d+))?)?([\/\\\w\.()-]*)?(?:([?][^#]*)?(#.*)?)*
          description: Callback url after authorization.
    application_response:
      type: object
      minProperties: 2
      maxProperties: 2
      required:
        - application_id
        - application_secret
      properties:
        application_id:
          type: string
          minLength: 266
          maxLength: 800
          pattern: ^-----BEGIN PUBLIC KEY-----[A-Za-z0-9\\\s/=+]+-----END PUBLIC
            KEY-----$
        application_secret:
          type: string
          minLength: 893
          maxLength: 899
          pattern: ^-----BEGIN PRIVATE KEY-----[A-Za-z0-9/+]{845,848}[=]{0,3}-----END
            PRIVATE KEY-----$
    access_token_request:
      type: object
      minProperties: 2
      maxProperties: 3
      required:
        - grant_type
      properties:
        grant_type:
          type: string
          maxLength: 20
          pattern: ^[A-Za-z_]+$
          description: one of code, password, refresh_token, client_credentials
        client_id:
          type: string
          minLength: 5
          maxLength: 800
          pattern: ^[A-Za-z0-9\\\s/=+-]*$
          description: Stewards Public Key
        client_secret:
          type: string
          minLength: 32
          maxLength: 1600
          pattern: ^[A-Za-z0-9\\\\\\s/=+-]*$
          description: Client Secret
        username:
          type: string
          pattern: ^[A-Za-z0-9_.-]+$
        password:
          type: string
        refresh_token:
          type: string
    token_response:
      type: object
      required:
        - access_token
        - expires
      properties:
        access_token:
          type: string
        expires:
          type: string
    oauth_authorize_request:
      type: object
      required:
        - response_type
      properties:
        response_type:
          type: string
          maxLength: 20
          pattern: ^[A-Za-z_]+$
          description: One of code, password, refresh_token, client_credentials
        client_id:
          type: string
          minLength: 266
          maxLength: 800
          pattern: ^-----BEGIN PUBLIC KEY-----[A-Za-z0-9\\\s/=+]+-----END PUBLIC
            KEY-----$
        redirect_uri:
          type: string
          format: url
          maxLength: 512
          description: A uri to redirect steward after authorization
        username:
          type: string
          pattern: ^[A-Za-z_]+$
          description: stewardname of user
        scopes:
          description: A comma separated list of scopes. If not provided, scope defaults to
            an empty list of scopes for stewards that don’t have a valid token
            for the app. For stewards who do already have a valid token for the
            app, the steward won’t be shown the OAuth authorization page with
            the list of scopes. Instead, this step of the flow will
            automatically complete with the same scopes that were used last time
            the steward completed the flow.
          type: array
          items:
            type: string
            minLength: 5
            maxLength: 32
    register_response:
      type: object
      properties:
        ok:
          type: boolean
        stewards:
          type: array
          items:
            $ref: "#/components/schemas/stewards_response"
    register_request:
      type: object
      minProperties: 2
      maxProperties: 4
      required:
        - stewardname
        - password
      properties:
        stewardname:
          type: string
          description: Stewards name
          maxLength: 255
          pattern: ^[A-Za-z0-9_.-]+$
        password:
          type: string
          description: Stewards password
          minLength: 4
          maxLength: 1024
        publicKey:
          type: string
          minLength: 266
          maxLength: 800
          description: "Stewards 1024bit - 4096bit RSA public key. command: openssl genpkey
            -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:4096
            ,openssl rsa -pubout -in private_key.pem -out public_key.pem , you
            can deterministically generate an RSA key from a passphrase
            http://crypto.stackexchange.com/questions/24514/deterministically-g\
            enerate-a-rsa-public-private-key-pair-from-a-passphrase-with you can
            also use this service to generate a key online:
            http://travistidwell.com/blog/2013/09/06/an-online-rsa-public-and-p\
            rivate-key-generator/"
          pattern: ^-----BEGIN PUBLIC KEY-----[A-Za-z0-9\\\s/=+]+-----END PUBLIC
            KEY-----$
        email:
          type: string
          description: Stewards email address
          format: email
          maxLength: 255
          pattern: ^([\w-]+(?:[\.\+][\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$
        email_notifications:
          type: boolean
          description: Does steward wish to receive email notifications
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
